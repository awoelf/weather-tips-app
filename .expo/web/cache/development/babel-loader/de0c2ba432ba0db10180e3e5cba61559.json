{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport React, { useEffect, useState } from 'react';\nimport * as Location from 'expo-location';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Comfortaa_700Bold, Inter_400Regular, Inter_700Bold } from '@expo-google-fonts/dev';\nimport { colors, size, fonts } from \"./utils\";\nimport Temperature from \"./components/Temperature\";\nimport WeatherDetails from \"./components/WeatherDetails\";\nimport Alerts from \"./components/Alerts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  var _useState5 = useState('I'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      unitSystem = _useState6[0],\n      setUnitSystem = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      alert = _useState8[0],\n      setAlert = _useState8[1];\n\n  var _useFonts = useFonts({\n    Comfortaa_700Bold: Comfortaa_700Bold,\n    Inter_400Regular: Inter_400Regular,\n    Inter_700Bold: Inter_700Bold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  useEffect(function () {\n    loadApp();\n  }, [unitSystem]);\n\n  function loadApp() {\n    var _await$Location$reque, status, location, _location$coords, latitude, longitude, weatherUrl, weatherResponse, weatherResult, alertUrl, alertResponse, alertResult;\n\n    return _regeneratorRuntime.async(function loadApp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setWeather(null);\n            setErrorMsg(null);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n          case 5:\n            _await$Location$reque = _context.sent;\n            status = _await$Location$reque.status;\n\n            if (!(status !== 'granted')) {\n              _context.next = 10;\n              break;\n            }\n\n            setErrorMsg('Access to location is required to run this app.');\n            return _context.abrupt(\"return\");\n\n          case 10:\n            ;\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n          case 13:\n            location = _context.sent;\n            _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n            weatherUrl = \"https://api.weatherbit.io/v2.0/current?\" + \"lat=\" + latitude + \"&lon=\" + longitude + \"&key=\" + \"96769f13f0104a86951174bc53a8804d\" + \"&units=\" + unitSystem;\n            _context.next = 18;\n            return _regeneratorRuntime.awrap(fetch(weatherUrl));\n\n          case 18:\n            weatherResponse = _context.sent;\n            _context.next = 21;\n            return _regeneratorRuntime.awrap(weatherResponse.json());\n\n          case 21:\n            weatherResult = _context.sent;\n            alertUrl = \"https://api.weatherbit.io/v2.0/alerts?\" + \"lat=\" + latitude + \"&lon=\" + longitude + \"&key=\" + \"96769f13f0104a86951174bc53a8804d\";\n            _context.next = 25;\n            return _regeneratorRuntime.awrap(fetch(alertUrl));\n\n          case 25:\n            alertResponse = _context.sent;\n            _context.next = 28;\n            return _regeneratorRuntime.awrap(alertResponse.json());\n\n          case 28:\n            alertResult = _context.sent;\n            weatherResponse.ok ? setWeather(weatherResult) : setErrorMsg(weatherResult.message);\n            alertResponse.ok ? setAlert(alertResult) : setErrorMsg(alertResult.message);\n            _context.next = 36;\n            break;\n\n          case 33:\n            _context.prev = 33;\n            _context.t0 = _context[\"catch\"](2);\n            setErrorMsg(_context.t0.message);\n\n          case 36:\n            ;\n\n          case 37:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 33]], Promise);\n  }\n\n  ;\n\n  if (!fontsLoaded) {\n    return _jsx(View, {\n      children: _jsx(AppLoading, {})\n    });\n  } else {\n    if (weather) {\n      return _jsxs(View, {\n        style: styles.main,\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(StatusBar, {}), _jsx(Text, {\n            children: _jsx(Temperature, {\n              weather: weather\n            })\n          })]\n        }), _jsx(View, {\n          style: styles.infoBox,\n          children: _jsx(Text, {\n            children: _jsx(WeatherDetails, {\n              weather: weather\n            })\n          })\n        }), alert && _jsx(View, {\n          style: styles.infoBox,\n          children: _jsx(Text, {\n            children: _jsx(Alerts, {\n              alert: alert\n            })\n          })\n        })]\n      });\n    } else if (errorMsg) {\n      return _jsxs(View, {\n        style: styles.main,\n        children: [_jsx(StatusBar, {}), _jsx(Text, {\n          style: styles.text,\n          children: errorMsg\n        })]\n      });\n    } else {\n      return _jsxs(View, {\n        style: styles.main,\n        children: [_jsx(StatusBar, {}), _jsx(Text, {\n          style: styles.loadText,\n          children: \"Loading...\"\n        })]\n      });\n    }\n  }\n\n  ;\n}\n;\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: colors.BACKGROUND_COLOR\n  },\n  text: {\n    fontFamily: fonts.BODY,\n    fontSize: size.BODY,\n    color: colors.FONT_COLOR,\n    textAlign: 'center'\n  },\n  loadText: {\n    fontFamily: fonts.HEADER,\n    fontSize: size.BODY,\n    color: colors.FONT_COLOR,\n    textAlign: 'center',\n    top: Dimensions.get('window').height / 2\n  },\n  infoBox: {\n    backgroundColor: colors.BOX_BACKGROUND,\n    paddingVertical: 20,\n    marginHorizontal: 30,\n    marginVertical: 4,\n    borderRadius: 15,\n    alignItems: 'center',\n    width: 300\n  },\n  header: {\n    marginBottom: 5\n  }\n});","map":{"version":3,"names":["StatusBar","React","useEffect","useState","Location","AppLoading","useFonts","Comfortaa_700Bold","Inter_400Regular","Inter_700Bold","colors","size","fonts","Temperature","WeatherDetails","Alerts","App","weather","setWeather","errorMsg","setErrorMsg","unitSystem","setUnitSystem","alert","setAlert","fontsLoaded","loadApp","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","location","coords","latitude","longitude","weatherUrl","fetch","weatherResponse","json","weatherResult","alertUrl","alertResponse","alertResult","ok","message","styles","main","header","infoBox","text","loadText","StyleSheet","create","flex","backgroundColor","BACKGROUND_COLOR","fontFamily","BODY","fontSize","color","FONT_COLOR","textAlign","HEADER","top","Dimensions","get","height","BOX_BACKGROUND","paddingVertical","marginHorizontal","marginVertical","borderRadius","alignItems","width","marginBottom"],"sources":["C:/Users/Alex/Documents/Projects/weather-tips-app/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Dimensions, useWindowDimensions } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport * as Location from 'expo-location';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Comfortaa_700Bold, Inter_400Regular, Inter_700Bold } from '@expo-google-fonts/dev';\n\nimport { WEATHER_API_KEY, WEATHER_URL, WEATHER_ALERT_URL } from '@env'\nimport { colors, size, fonts } from './utils';\nimport Temperature from './components/Temperature';\nimport WeatherDetails from './components/WeatherDetails';\nimport Alerts from './components/Alerts';\n\n\nexport default function App() {\n  const [weather, setWeather] = useState(null); // A state that holds the information about weather.\n  const [errorMsg, setErrorMsg] = useState(null); // State that holds information about error messages\n  const [unitSystem, setUnitSystem] = useState('I'); // Determines imperial or celsius units\n  const [alert, setAlert] = useState(null);\n\n  let [fontsLoaded] = useFonts({\n    Comfortaa_700Bold, Inter_400Regular, Inter_700Bold\n  });\n\n  // useEffect is a custom hook that runs once initially.\n  useEffect(() => {\n    loadApp()\n  }, [unitSystem]);  // When unitSystem changes, useEffect will run.\n\n  async function loadApp() {\n    setWeather(null);\n    setErrorMsg(null);\n    try {\n\n      let { status } = await Location.requestForegroundPermissionsAsync();\n\n      if(status !== 'granted') {\n        setErrorMsg('Access to location is required to run this app.');\n        return\n      };\n\n      const location = await Location.getCurrentPositionAsync();\n      const {latitude, longitude} = location.coords;\n\n      const weatherUrl = `${WEATHER_URL}lat=${latitude}&lon=${longitude}&key=${WEATHER_API_KEY}&units=${unitSystem}`;\n      const weatherResponse = await fetch(weatherUrl);\n      const weatherResult = await weatherResponse.json();\n\n      const alertUrl = `${WEATHER_ALERT_URL}lat=${latitude}&lon=${longitude}&key=${WEATHER_API_KEY}`;\n      const alertResponse = await fetch(alertUrl);\n      const alertResult = await alertResponse.json();\n      \n      (weatherResponse.ok) ? setWeather(weatherResult) : setErrorMsg(weatherResult.message);\n      (alertResponse.ok) ? setAlert(alertResult) : setErrorMsg(alertResult.message);\n\n    } catch(error) {\n      setErrorMsg(error.message);\n    };\n  };\n\n  //TODO change to a splash screen to get rid of scary yellow text.\n  if (!fontsLoaded) {\n    return (\n      <View>\n        <AppLoading /> \n      </View>\n    )\n  } else {\n    // Normal display\n    if(weather) { \n      return (\n        <View style={styles.main}>\n          <View style={styles.header}>\n            <StatusBar /> \n            <Text><Temperature weather={weather} /></Text>\n          </View>\n          <View style={styles.infoBox}>\n            <Text><WeatherDetails weather={weather} /></Text>\n          </View>\n          {alert &&\n            <View style={styles.infoBox}>\n              <Text><Alerts alert={alert}></Alerts></Text>\n            </View>\n          }\n        </View>\n      )\n    // Error page\n    } else if (errorMsg){\n      return(\n        <View style={styles.main}>\n          <StatusBar />\n          <Text style={styles.text}>{errorMsg}</Text>\n        </View>\n        \n      );\n    // Misc. loading. Will be deleted when splash page is implemented.\n    } else {\n      return (\n        <View style={styles.main}>\n          <StatusBar />\n          <Text style={styles.loadText}>Loading...</Text>\n        </View>\n      )\n    }\n  };\n    \n  };\n \n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: colors.BACKGROUND_COLOR\n  },\n  text: {\n    fontFamily: fonts.BODY,\n    fontSize: size.BODY,\n    color: colors.FONT_COLOR,\n    textAlign: 'center'\n  },\n  loadText: {\n    fontFamily: fonts.HEADER,\n    fontSize: size.BODY,\n    color: colors.FONT_COLOR,\n    textAlign: 'center',\n    top: Dimensions.get('window').height/2\n  },\n  infoBox: {\n    backgroundColor: colors.BOX_BACKGROUND,\n    paddingVertical: 20,\n    marginHorizontal: 30,\n    marginVertical: 4,\n    borderRadius: 15,\n    alignItems: 'center',\n    width: 300\n  },\n  header: {\n    marginBottom: 5\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}