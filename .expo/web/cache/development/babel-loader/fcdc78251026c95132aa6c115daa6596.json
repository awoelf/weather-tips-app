{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React from \"react\";\nimport { colors, fonts, size } from \"../utils\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Header(_ref) {\n  var weather = _ref.weather;\n\n  var _weather$data = _slicedToArray(weather.data, 1),\n      _weather$data$ = _weather$data[0],\n      temp = _weather$data$.temp,\n      city_name = _weather$data$.city_name,\n      _weather$data$$weathe = _weather$data$.weather,\n      description = _weather$data$$weathe.description,\n      icon = _weather$data$$weathe.icon;\n\n  var weatherIcon = \"https://res.cloudinary.com/awoelf/image/upload/v1657217332/\" + icon + \".png\";\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: {\n        left: 40\n      },\n      children: [_jsxs(Text, {\n        style: styles.temperature,\n        children: [temp, \"\\xB0hhhh\"]\n      }), _jsxs(View, {\n        style: styles.weatherDetails,\n        children: [_jsx(Text, {\n          style: styles.city,\n          children: city_name\n        }), _jsx(Text, {\n          style: styles.description,\n          children: description\n        })]\n      })]\n    }), _jsx(View, {\n      children: _jsx(Image, {\n        style: styles.weatherIcon,\n        source: {\n          uri: weatherIcon\n        }\n      })\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 30,\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  temperature: {\n    fontSize: size.HEADER,\n    fontFamily: fonts.HEADER,\n    color: colors.FONT_COLOR\n  },\n  city: {\n    fontSize: size.HEADER2,\n    fontFamily: fonts.HEADER,\n    color: colors.FONT_COLOR\n  },\n  description: {\n    fontSize: size.BODY,\n    fontFamily: fonts.HEADER,\n    color: colors.FONT_COLOR\n  },\n  weatherIcon: {\n    width: 100,\n    height: 100,\n    left: 80\n  },\n  weatherDetails: {\n    top: -20\n  }\n});","map":{"version":3,"names":["React","colors","fonts","size","Header","weather","data","temp","city_name","description","icon","weatherIcon","styles","container","left","temperature","weatherDetails","city","uri","StyleSheet","create","paddingTop","alignItems","flexDirection","fontSize","HEADER","fontFamily","color","FONT_COLOR","HEADER2","BODY","width","height","top"],"sources":["C:/Users/Alex/Documents/Projects/weather-tips-app/components/Header.js"],"sourcesContent":["import { View, Text, StyleSheet, Image } from \"react-native\";\r\nimport React from \"react\";\r\nimport { colors, fonts, size } from \"../utils\";\r\n\r\n\r\nexport default function Header({weather}) {\r\n    const { data: [{temp, city_name, weather: {description, icon}}]} = weather;\r\n    const weatherIcon = `https://res.cloudinary.com/awoelf/image/upload/v1657217332/${icon}.png`;\r\n    return (\r\n      <View style={styles.container}>\r\n          <View style={{left: 40}}>\r\n            <Text style={styles.temperature}>{temp}Â°hhhh</Text>\r\n            <View style={styles.weatherDetails}>\r\n              <Text style={styles.city}>{city_name}</Text>\r\n              <Text style={styles.description}>{description}</Text>\r\n            </View>\r\n          </View>\r\n          <View>\r\n            <Image style={styles.weatherIcon} source={{uri: weatherIcon}} />\r\n          </View>\r\n      </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  \r\n  container: {\r\n    paddingTop: 30,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n  },\r\n  temperature: {\r\n    fontSize: size.HEADER,\r\n    fontFamily: fonts.HEADER,\r\n    color: colors.FONT_COLOR\r\n  },\r\n  city: {\r\n    fontSize: size.HEADER2,\r\n    fontFamily: fonts.HEADER,\r\n    color: colors.FONT_COLOR\r\n  },\r\n  description: {\r\n    fontSize: size.BODY,\r\n    fontFamily: fonts.HEADER,\r\n    color: colors.FONT_COLOR\r\n  },\r\n  weatherIcon: {\r\n    width: 100,\r\n    height: 100,\r\n    left: 80\r\n  },\r\n  weatherDetails: {\r\n    top: -20\r\n  }\r\n})\r\n"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB;;;AAGA,eAAe,SAASC,MAAT,OAA2B;EAAA,IAAVC,OAAU,QAAVA,OAAU;;EACtC,mCAAmEA,OAAnE,CAAQC,IAAR;EAAA;EAAA,IAAgBC,IAAhB,kBAAgBA,IAAhB;EAAA,IAAsBC,SAAtB,kBAAsBA,SAAtB;EAAA,2CAAiCH,OAAjC;EAAA,IAA2CI,WAA3C,yBAA2CA,WAA3C;EAAA,IAAwDC,IAAxD,yBAAwDA,IAAxD;;EACA,IAAMC,WAAW,mEAAiED,IAAjE,SAAjB;EACA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEE,MAAM,CAACC,SAApB;IAAA,WACI,MAAC,IAAD;MAAM,KAAK,EAAE;QAACC,IAAI,EAAE;MAAP,CAAb;MAAA,WACE,MAAC,IAAD;QAAM,KAAK,EAAEF,MAAM,CAACG,WAApB;QAAA,WAAkCR,IAAlC;MAAA,EADF,EAEE,MAAC,IAAD;QAAM,KAAK,EAAEK,MAAM,CAACI,cAApB;QAAA,WACE,KAAC,IAAD;UAAM,KAAK,EAAEJ,MAAM,CAACK,IAApB;UAAA,UAA2BT;QAA3B,EADF,EAEE,KAAC,IAAD;UAAM,KAAK,EAAEI,MAAM,CAACH,WAApB;UAAA,UAAkCA;QAAlC,EAFF;MAAA,EAFF;IAAA,EADJ,EAQI,KAAC,IAAD;MAAA,UACE,KAAC,KAAD;QAAO,KAAK,EAAEG,MAAM,CAACD,WAArB;QAAkC,MAAM,EAAE;UAACO,GAAG,EAAEP;QAAN;MAA1C;IADF,EARJ;EAAA,EADF;AAcH;AAAA;AAED,IAAMC,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAE/BP,SAAS,EAAE;IACTQ,UAAU,EAAE,EADH;IAETC,UAAU,EAAE,QAFH;IAGTC,aAAa,EAAE;EAHN,CAFoB;EAO/BR,WAAW,EAAE;IACXS,QAAQ,EAAErB,IAAI,CAACsB,MADJ;IAEXC,UAAU,EAAExB,KAAK,CAACuB,MAFP;IAGXE,KAAK,EAAE1B,MAAM,CAAC2B;EAHH,CAPkB;EAY/BX,IAAI,EAAE;IACJO,QAAQ,EAAErB,IAAI,CAAC0B,OADX;IAEJH,UAAU,EAAExB,KAAK,CAACuB,MAFd;IAGJE,KAAK,EAAE1B,MAAM,CAAC2B;EAHV,CAZyB;EAiB/BnB,WAAW,EAAE;IACXe,QAAQ,EAAErB,IAAI,CAAC2B,IADJ;IAEXJ,UAAU,EAAExB,KAAK,CAACuB,MAFP;IAGXE,KAAK,EAAE1B,MAAM,CAAC2B;EAHH,CAjBkB;EAsB/BjB,WAAW,EAAE;IACXoB,KAAK,EAAE,GADI;IAEXC,MAAM,EAAE,GAFG;IAGXlB,IAAI,EAAE;EAHK,CAtBkB;EA2B/BE,cAAc,EAAE;IACdiB,GAAG,EAAE,CAAC;EADQ;AA3Be,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}